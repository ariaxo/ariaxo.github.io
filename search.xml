<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>An unexpected post after long dissapearance</title>
      <link href="/2022/10/31/ok/"/>
      <url>/2022/10/31/ok/</url>
      
        <content type="html"><![CDATA[<p>只是在学校机房坐牢而已。</p><p>发这篇的时候顺便de了一堆bug…</p><p>hexo d对远程进行部署时提示 Spawn Error，按网上说的删除.deploy_git再回滚的方式无用<br>后来发现是根目录下的配置文件有问题，Deploy下的repo用了https方法，更换为SSH方法后ok。</p><p>然后自订域名就失效了…<br>检查github仓库发现CNAME文件消失，检查域名控制台状态正常</p><p>在仓库的设定中添加costume domain，再次访问。ok。<br>（之前添加的居然是A记录，不知道当初github怎么check过的）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《解放的悖论——世俗革命与宗教反革命》笔记</title>
      <link href="/2022/02/16/PofLnotes/"/>
      <url>/2022/02/16/PofLnotes/</url>
      
        <content type="html"><![CDATA[<h1 id="民族解放的悖论"><a href="#民族解放的悖论" class="headerlink" title="民族解放的悖论"></a>民族解放的悖论</h1><blockquote><p>为何革命是左翼的革命，共和却是原教旨的？<br>必须彻底摈弃过去，但有很多人珍视自己的生活方式。</p></blockquote><ul><li>民族解放的两个任务：</li></ul><ol><li>从外部压迫中得到解放；</li><li>从外部压迫的内部影响——自我压迫中解放。</li></ol><ul><li><p>宗教为什么不是解放的力量？<br>解放创造“新人”，宗教宣扬的是一种服从主流社会秩序、安于现状的哲学。<br>大多数宗教制定了一种现世可行的修行制度，要求信徒服从并给予领袖权威，而这些宗教领袖往往接受殖民者的任命。<br>民族解放需要与现存的国家斗争，千年盛世的思想看似在反抗殖民者统治，长远来看却是一种政治适应——因为它无法形成稳定持久的意识形态与反抗力量。<br>获得政治独立后，传统宗教会开始构建一种反革命的政治。</p></li><li><p>解放者<br>解放者往往在压迫者的家乡和文化中接受教育。阿尔及利亚民族解放阵线中讲法语/热爱法国文化者并不少见，尼赫鲁在英国学校接受了八年教育，印度共产党的几位领导人都在英国接受教育。<br>解放者往往认同宗主国中反对派的意识形态。<br>现代意识形态、平等地位、与权威决裂。</p></li><li><p>解放<br>人民对统治者的文化和政治同情更少。<br>当解放者更可能胜出时，传统的政治宗教领袖往往被边缘化。“传统主义似乎被击败了。”<br>例外是甘地，现代主义者把印度解放后异常强大的宗教民族主义归于甘地。如今的左翼分子对甘地也采取批判态度。</p></li><li><p>那么解放后政治化的宗教是怎么产生的？<br>解放者的执政党逐渐疲软——腐败和宗教复兴看起来是同时发生的。<br>解放后宗教的影响依旧很大，民族主义领袖会发现宗教对统治的帮助很大，新统治者不敢像布尔什维克那样攻击宗教，相信“衰落是宗教的命运”。<br>旧的方式在宗教场所延续——更重要的是，在人际关系、家庭、生老病死中延续。<br>新兴精英被迫采取/主动拥抱极权政治和父权统治，民众对精英的反感推动了宗教复兴。</p></li></ul><p>结果是，落后回归了，讽刺地，它的回归主要借助于解放中建立的民主制度。</p><h1 id="否定悖论"><a href="#否定悖论" class="headerlink" title="否定悖论"></a>否定悖论</h1><p>本书的悖论与解放者与人民的紧张关系有关——同情与敌意。</p><h3 id="马克思主义的解释"><a href="#马克思主义的解释" class="headerlink" title="马克思主义的解释"></a>马克思主义的解释</h3><p>宗教信仰以及信仰造就的身份认同都是伪意识，并未接触到阶级斗争中的真实世界。解放者的民族主义未能战胜宗教，是因为民族主义也是一种源自同样原始思想和情感的伪意识。无论民族主义与宗教复兴之间的争端有多激烈，它们实际上是相互扶持的，共同促进一种狭隘的政治。实际上，殖民化是非民族的，如果解放者以为自己是在为民族解放作斗争，那就大错特错了。</p><p>作者认为，马克思主义者“动员劳动阶层革命力量”的想法造成了解放者被边缘化的政治力量，先锋队实际上是在与人民为敌——因为先锋队不可能认同宗教感情。马克思主义者诉诸普世价值，在受压迫者中培养出一种新的跨越民族的团结——国际革命——但它从未成功：无产阶级国际主义在哪里都没有取代民族认同，对异族的反抗跨越了阶级。对民族解放的批判也是一种道德批判。</p><h3 id="后殖民主义的解释"><a href="#后殖民主义的解释" class="headerlink" title="后殖民主义的解释"></a>后殖民主义的解释</h3><p>民族主义与宗教复兴都是现代性的产物，带着浪漫主义的怀旧色彩。解放者并没有挑战殖民统治产生的单一又狂热的宗教统治，而是争着运用这种惩戒性权力。</p><h3 id="宗教狂热"><a href="#宗教狂热" class="headerlink" title="宗教狂热"></a>宗教狂热</h3><p>每一个随解放运动出现的民族/宗教群体都是这个运动的试金石，如巴勒斯坦人之于以色列人。少数群体对解放运动的效仿证明了解放运动的力量——解放是一个反复发生的过程。解放主义并不是宗教狂热的源泉。宗教狂热产生于宗教信徒不想互相包容时——他们试图建立一个完全为自己的国家，而不是古典式的杂居国家。</p><h1 id="民族解放的未来"><a href="#民族解放的未来" class="headerlink" title="民族解放的未来"></a>民族解放的未来</h1><h3 id="世俗民主左派的文化重建哪里出问题了？"><a href="#世俗民主左派的文化重建哪里出问题了？" class="headerlink" title="世俗民主左派的文化重建哪里出问题了？"></a>世俗民主左派的文化重建哪里出问题了？</h3><p>出发点：解放和主导权不能靠协商取得。<br>猛烈的对抗意识不是一种创造性的力量，不会走向均衡状态。<br>作者认为，解放需要某种宗教改革——许多东西需要被否定，但它也需要一些改革解放的工作：如果一开始与传统全面接触，传统派的反革命就可以被避免，提高民族解放实现的几率，尽管如此解放的过程依旧是世俗的——解放是世间的、时长无限的、结果不由信仰——宗教或者意识形态决定——不同的接触方式，结果也是不同的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP与web安全</title>
      <link href="/2022/02/06/HTTPSwebsec/"/>
      <url>/2022/02/06/HTTPSwebsec/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP的安全漏洞"><a href="#HTTP的安全漏洞" class="headerlink" title="HTTP的安全漏洞"></a>HTTP的安全漏洞</h1><ol><li>窃听；</li><li>伪装；</li><li>篡改。<br>（安全经典三漏洞…）</li></ol><h1 id="HTTP-Secure"><a href="#HTTP-Secure" class="headerlink" title="HTTP Secure"></a>HTTP Secure</h1><p>HTTPS就是被SSL（secure socket layer)/TLS协议代替通信接口部分的HTTP。<br>HTTPS=HTTP+加密+认证+完整性保护。</p><h2 id="通信加密"><a href="#通信加密" class="headerlink" title="通信加密"></a>通信加密</h2><ul><li>SSL（secure socket layer)<br>是独立的协议，其他运行在应用层的协议都可以配合SSL使用。<blockquote><p><strong>公开密钥加密</strong>：在这种方法中，需要一对密钥，一个是私人密钥，另一个则是公开密钥。<br><strong>共享密钥加密</strong>：共享密钥加密是加密和解密都是用相同密钥的一种加密方式，这种算法也被称为“对称加密”<br>证书可以验证密钥正确性。</p></blockquote></li></ul><p>浏览器提示你证书不正确/已过期时发生了什么？</p><p>SSL的速度问题：</p><p>没有根本的解决方案，只能使用SSL加速器（专用服务器）改善问题。</p><ul><li>TLS（transport layer security）</li></ul><h2 id="验证身份"><a href="#验证身份" class="headerlink" title="验证身份"></a>验证身份</h2><p>使用SSL可以验明通信方，使用一种叫<strong>证书</strong>的手段。<br>证书由第三方机构颁发。</p><h2 id="验证完整性"><a href="#验证完整性" class="headerlink" title="验证完整性"></a>验证完整性</h2><p>遭到攻击者拦截并篡改内容的攻击：中间人攻击。</p><h3 id="防止篡改"><a href="#防止篡改" class="headerlink" title="防止篡改"></a>防止篡改</h3><p>使用散列值校验方法：MD5,SHA-1。<br>提供下载服务的网站也会提供PGP（完美隐私）创建的数字签名。<br>都需要用户亲自验证，浏览器无法自动检查。</p>]]></content>
      
      
      
        <tags>
            
            <tag> HTTP </tag>
            
            <tag> websec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP学习笔记</title>
      <link href="/2022/02/01/HTTP_notes/"/>
      <url>/2022/02/01/HTTP_notes/</url>
      
        <content type="html"><![CDATA[<h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><h1 id="1-TCP-IP协议族"><a href="#1-TCP-IP协议族" class="headerlink" title="1. TCP/IP协议族"></a>1. TCP/IP协议族</h1><p>  <em>以后可能会写TCP/IP的笔记，大概…</em><br>  通常使用的网络是在TCP/IP协议族的基础上运行的，HTTP属于其子集。</p><h4 id="1-1-TCP-IP分层管理"><a href="#1-1-TCP-IP分层管理" class="headerlink" title="1.1 TCP/IP分层管理"></a>1.1 TCP/IP分层管理</h4><h3 id="分层的优势"><a href="#分层的优势" class="headerlink" title="分层的优势"></a>分层的优势</h3><p>  各层次接口调整好后，每个层次内部可以自由改动。</p><h3 id="分层"><a href="#分层" class="headerlink" title="分层"></a>分层</h3><ol><li>应用层<br>应用层决定向用户提供应用服务时通信的活动。<strong>HTTP属于该层。</strong></li><li>传输层<br>传输层提供<strong>处于网络连接中的</strong>两台计算机的<strong>数据传输</strong>，有两个性质不同的协议：TCP（Transmission control protocol）与UDP（User data protocol）。</li><li>网络层<br>网络层规定了到达用户计算机并传输数据的传输路线。</li><li>链路层<br>即硬件部分。</li></ol><h4 id="1-2-TCP-IP数据传输流"><a href="#1-2-TCP-IP数据传输流" class="headerlink" title="1.2 TCP/IP数据传输流"></a>1.2 TCP/IP数据传输流</h4><p>  客户端&lt;-&gt;层&lt;-&gt;服务器<br>  发送端传输数据时，每经过一层必定被打上一个该层所属的首部信息，反之，接收端接收数据时，每经过一层必定会把对应的首部消去。这种方法称为<strong>封装</strong>。</p><h4 id="1-3-与HTTP关系密切的协议：IP-TCP与DNS"><a href="#1-3-与HTTP关系密切的协议：IP-TCP与DNS" class="headerlink" title="1.3 与HTTP关系密切的协议：IP, TCP与DNS"></a>1.3 与HTTP关系密切的协议：IP, TCP与DNS</h4><h3 id="IP（Internet-protoc）"><a href="#IP（Internet-protoc）" class="headerlink" title="IP（Internet protoc）"></a>IP（Internet protoc）</h3><p>IP协议的作用是传送数据包，确保传送两个最重要的条件是IP地址和MAC地址（Media access control address）：</p><ul><li>IP地址指明节点被分配的地址，可以变换。</li><li>MAC地址是网卡所属的固定地址，一般不会更改。</li></ul><p>IP间通信时，利用下一站中转设备的MAC地址搜索下一个中转目标，通过ARP协议（Address resolution protocol），根据对方IP地址反查MAC地址。<br>网络设备在到达中转目标的过程中，只能很粗略地获悉传输路线。这种机制称为路由选择（Routing）。换言之，<strong>不可能掌握互联网中的细节。</strong></p><h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><p>TCP协议的作用是提供可靠的字节流服务。</p><blockquote><p>字节流服务（Byte stream protocol）：将大块数据分成以报文段（Segment）为单位的数据包进行管理，TCP协议可以确定数据是否到达。</p></blockquote><p>三次握手（three-way handshaking）策略：使用带TCP的标志（flag）————SYN（synchronize）与ACK（acknowledgement）进行传输————发送端发送带SYN的数据包，接收端收到后回传带有SYN/ACK标志的数据包，最后发送端回传带ACK标志的数据包。  </p><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p>DNS服务提供从域名到IP的解析服务：通过域名查找IP地址，或从IP地址反查域名。</p><h1 id="2-URI与URL"><a href="#2-URI与URL" class="headerlink" title="2. URI与URL"></a>2. URI与URL</h1><p><em>（属于TCP/IP族，但还是分开了…）</em></p><h4 id="URI（Uniform-resource-identifier）"><a href="#URI（Uniform-resource-identifier）" class="headerlink" title="URI（Uniform resource identifier）"></a>URI（Uniform resource identifier）</h4><p>URI用字符串标识某一互联网资源。</p><h4 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h4><p>表示资源的地点，是URI的子集。</p><h4 id="URI的格式"><a href="#URI的格式" class="headerlink" title="URI的格式"></a>URI的格式</h4><ul><li>绝对URI：涵盖全部必要信息</li><li>绝对URL</li><li>相对URL</li></ul><hr><h1 id="HTTP基础"><a href="#HTTP基础" class="headerlink" title="HTTP基础"></a>HTTP基础</h1><p>HTTP用于客户端和服务器之间的通信，HTTP协议能够明确区分客户端与服务器。</p><h2 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h2><p>HTTP协议规定，请求从客户端发出，服务器响应请求————通信从客户端开始建立。</p><h2 id="HTTP是一种无状态（stateless）协议，不对请求和响应之间的通信状态进行保存"><a href="#HTTP是一种无状态（stateless）协议，不对请求和响应之间的通信状态进行保存" class="headerlink" title="HTTP是一种无状态（stateless）协议，不对请求和响应之间的通信状态进行保存"></a>HTTP是一种无状态（stateless）协议，不对请求和响应之间的通信状态进行保存</h2><p>如需保存状态，需要cookie技术。</p><blockquote><h2 id="Cookie状态管理"><a href="#Cookie状态管理" class="headerlink" title="Cookie状态管理"></a>Cookie状态管理</h2><p>Cookie技术通过在请求/响应报文中写入Cookie信息控制客户端状态。<br>过程：Cookie根据服务器发送的响应报文内的Set-Cookie首部字段信息通知客户端保存Cookie，<strong>下次</strong>客户端再次发送请求时会自动加入Cookie信息。服务端收到客户端发来的Cookie后，会检查是哪个客户端的记录，接着对比服务器记录，得到之前的状态信息。</p></blockquote><h2 id="HTTP1-1新特性"><a href="#HTTP1-1新特性" class="headerlink" title="HTTP1.1新特性"></a>HTTP1.1新特性</h2><h3 id="恒久连接（Persistent-connections）"><a href="#恒久连接（Persistent-connections）" class="headerlink" title="恒久连接（Persistent connections）"></a>恒久连接（Persistent connections）</h3><p>HTTP1.1中所有连接默认为恒久连接，即任意一方未提出断开连接时保持TCP的连接状态。<br>这样做减少了服务器开销。</p><h3 id="管线化（pipelining）"><a href="#管线化（pipelining）" class="headerlink" title="管线化（pipelining）"></a>管线化（pipelining）</h3><p>同时并行发送多个请求，不必等待响应。</p><hr><h1 id="HTTP报文内的信息"><a href="#HTTP报文内的信息" class="headerlink" title="HTTP报文内的信息"></a>HTTP报文内的信息</h1><p>报文是HTTP通信基本单位，由8位组字节流组成。</p><h2 id="HTTP报文的结构"><a href="#HTTP报文的结构" class="headerlink" title="HTTP报文的结构"></a>HTTP报文的结构</h2><ol><li>报文首部（请求/状态行，请求/响应首部字段，通用首部字段，实体首部字段）</li><li>空行；</li><li>主体。</li></ol><p><strong>实体</strong>由实体首部和主体组成，作为请求和响应的补充项。 </p><h2 id="提升传输效率"><a href="#提升传输效率" class="headerlink" title="提升传输效率"></a>提升传输效率</h2><ul><li>内容编码压缩传输；</li><li>分块传输编码；</li><li>范围请求。</li></ul>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
          <category> CN </category>
          
          <category> InfoSec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
            <tag> websec </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
