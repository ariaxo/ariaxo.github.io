<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Voidhead</title>
  <icon>http://example.com/icon.png</icon>
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-01T05:06:44.986Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Ariax</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>An unexpected post after long dissapearance</title>
    <link href="http://example.com/2022/10/31/ok/"/>
    <id>http://example.com/2022/10/31/ok/</id>
    <published>2022-10-31T06:03:00.000Z</published>
    <updated>2023-03-01T05:06:44.986Z</updated>
    
    
    <summary type="html">&lt;p&gt;I was just doing time in school, no thing too major. While I was at it, I fixed of a bunch of bugs… I tried to deploy remotely with ‘hexo d’, but got hit with a ‘Spawn Error’. I tried deleting ‘.deploy_git’ and rolling back like they suggested online, but proved ineffective. Turned out the config file in the root directory was the issue. The ‘Deploy’ repo was using ‘https’ method, but after switching to ‘SSH’, everything worked fine.&lt;/p&gt;
&lt;p&gt;But then my custom domain stopped working… Checked the GitHub repo and saw that the ‘CNAME’ file had vanished. Domain control panel looked normal though. Added a custom domain in the repo settings, and voila. (Turns out I had added an ‘A record’ earlier - go figure how GitHub missed it.)&lt;/p&gt;
</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>《解放的悖论——世俗革命与宗教反革命》笔记</title>
    <link href="http://example.com/2022/02/16/PofLnotes/"/>
    <id>http://example.com/2022/02/16/PofLnotes/</id>
    <published>2022-02-16T03:21:22.862Z</published>
    <updated>2022-02-16T08:54:03.888Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;民族解放的悖论&quot;&gt;&lt;a href=&quot;#民族解放的悖论&quot; class=&quot;headerlink&quot; title=&quot;民族解放的悖论&quot;&gt;&lt;/a&gt;民族解放的悖论&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;为何革命是左翼的革命，共和却是原教旨的？&lt;br&gt;必须彻底摈弃过去，但有很多人珍视自己的生活方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;民族解放的两个任务：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;从外部压迫中得到解放；&lt;/li&gt;
&lt;li&gt;从外部压迫的内部影响——自我压迫中解放。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;宗教为什么不是解放的力量？&lt;br&gt;解放创造“新人”，宗教宣扬的是一种服从主流社会秩序、安于现状的哲学。&lt;br&gt;大多数宗教制定了一种现世可行的修行制度，要求信徒服从并给予领袖权威，而这些宗教领袖往往接受殖民者的任命。&lt;br&gt;民族解放需要与现存的国家斗争，千年盛世的思想看似在反抗殖民者统治，长远来看却是一种政治适应——因为它无法形成稳定持久的意识形态与反抗力量。&lt;br&gt;获得政治独立后，传统宗教会开始构建一种反革命的政治。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解放者&lt;br&gt;解放者往往在压迫者的家乡和文化中接受教育。阿尔及利亚民族解放阵线中讲法语/热爱法国文化者并不少见，尼赫鲁在英国学校接受了八年教育，印度共产党的几位领导人都在英国接受教育。&lt;br&gt;解放者往往认同宗主国中反对派的意识形态。&lt;br&gt;现代意识形态、平等地位、与权威决裂。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解放&lt;br&gt;人民对统治者的文化和政治同情更少。&lt;br&gt;当解放者更可能胜出时，传统的政治宗教领袖往往被边缘化。“传统主义似乎被击败了。”&lt;br&gt;例外是甘地，现代主义者把印度解放后异常强大的宗教民族主义归于甘地。如今的左翼分子对甘地也采取批判态度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;那么解放后政治化的宗教是怎么产生的？&lt;br&gt;解放者的执政党逐渐疲软——腐败和宗教复兴看起来是同时发生的。&lt;br&gt;解放后宗教的影响依旧很大，民族主义领袖会发现宗教对统治的帮助很大，新统治者不敢像布尔什维克那样攻击宗教，相信“衰落是宗教的命运”。&lt;br&gt;旧的方式在宗教场所延续——更重要的是，在人际关系、家庭、生老病死中延续。&lt;br&gt;新兴精英被迫采取/主动拥抱极权政治和父权统治，民众对精英的反感推动了宗教复兴。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果是，落后回归了，讽刺地，它的回归主要借助于解放中建立的民主制度。&lt;/p&gt;
&lt;h1 id=&quot;否定悖论&quot;&gt;&lt;a href=&quot;#否定悖论&quot; class=&quot;headerlink&quot; title=&quot;否定悖论&quot;&gt;&lt;/a&gt;否定悖论&lt;/h1&gt;&lt;p&gt;本书的悖论与解放者与人民的紧张关系有关——同情与敌意。&lt;/p&gt;
&lt;h3 id=&quot;马克思主义的解释&quot;&gt;&lt;a href=&quot;#马克思主义的解释&quot; class=&quot;headerlink&quot; title=&quot;马克思主义的解释&quot;&gt;&lt;/a&gt;马克思主义的解释&lt;/h3&gt;&lt;p&gt;宗教信仰以及信仰造就的身份认同都是伪意识，并未接触到阶级斗争中的真实世界。解放者的民族主义未能战胜宗教，是因为民族主义也是一种源自同样原始思想和情感的伪意识。无论民族主义与宗教复兴之间的争端有多激烈，它们实际上是相互扶持的，共同促进一种狭隘的政治。实际上，殖民化是非民族的，如果解放者以为自己是在为民族解放作斗争，那就大错特错了。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>HTTP与web安全</title>
    <link href="http://example.com/2022/02/06/HTTPSwebsec/"/>
    <id>http://example.com/2022/02/06/HTTPSwebsec/</id>
    <published>2022-02-05T16:00:00.000Z</published>
    <updated>2023-02-26T14:20:51.919Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;HTTP的安全漏洞&quot;&gt;&lt;a href=&quot;#HTTP的安全漏洞&quot; class=&quot;headerlink&quot; title=&quot;HTTP的安全漏洞&quot;&gt;&lt;/a&gt;HTTP的安全漏洞&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;窃听；&lt;/li&gt;
&lt;li&gt;伪装；&lt;/li&gt;
&lt;li&gt;篡改。&lt;br&gt;（安全经典三漏洞…）&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;HTTP-Secure&quot;&gt;&lt;a href=&quot;#HTTP-Secure&quot; class=&quot;headerlink&quot; title=&quot;HTTP Secure&quot;&gt;&lt;/a&gt;HTTP Secure&lt;/h1&gt;&lt;p&gt;HTTPS就是被SSL（secure socket layer)/TLS协议代替通信接口部分的HTTP。&lt;br&gt;HTTPS=HTTP+加密+认证+完整性保护。&lt;/p&gt;
&lt;h2 id=&quot;通信加密&quot;&gt;&lt;a href=&quot;#通信加密&quot; class=&quot;headerlink&quot; title=&quot;通信加密&quot;&gt;&lt;/a&gt;通信加密&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SSL（secure socket layer)&lt;br&gt;是独立的协议，其他运行在应用层的协议都可以配合SSL使用。&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;公开密钥加密&lt;/strong&gt;：在这种方法中，需要一对密钥，一个是私人密钥，另一个则是公开密钥。&lt;br&gt;&lt;strong&gt;共享密钥加密&lt;/strong&gt;：共享密钥加密是加密和解密都是用相同密钥的一种加密方式，这种算法也被称为“对称加密”&lt;br&gt;证书可以验证密钥正确性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;浏览器提示你证书不正确/已过期时发生了什么？&lt;/p&gt;
&lt;p&gt;SSL的速度问题：&lt;/p&gt;
&lt;p&gt;没有根本的解决方案，只能使用SSL加速器（专用服务器）改善问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TLS（transport layer security）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="HTTP" scheme="http://example.com/tags/HTTP/"/>
    
    <category term="websec" scheme="http://example.com/tags/websec/"/>
    
  </entry>
  
  <entry>
    <title>HTTP学习笔记</title>
    <link href="http://example.com/2022/02/01/HTTP_notes/"/>
    <id>http://example.com/2022/02/01/HTTP_notes/</id>
    <published>2022-02-01T12:32:01.000Z</published>
    <updated>2023-02-26T14:17:42.963Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;背景知识&quot;&gt;&lt;a href=&quot;#背景知识&quot; class=&quot;headerlink&quot; title=&quot;背景知识&quot;&gt;&lt;/a&gt;背景知识&lt;/h1&gt;&lt;h1 id=&quot;1-TCP-IP协议族&quot;&gt;&lt;a href=&quot;#1-TCP-IP协议族&quot; class=&quot;headerlink&quot; title=&quot;1. TCP/IP协议族&quot;&gt;&lt;/a&gt;1. TCP/IP协议族&lt;/h1&gt;&lt;p&gt;  &lt;em&gt;以后可能会写TCP/IP的笔记，大概…&lt;/em&gt;&lt;br&gt;  通常使用的网络是在TCP/IP协议族的基础上运行的，HTTP属于其子集。&lt;/p&gt;
&lt;h4 id=&quot;1-1-TCP-IP分层管理&quot;&gt;&lt;a href=&quot;#1-1-TCP-IP分层管理&quot; class=&quot;headerlink&quot; title=&quot;1.1 TCP/IP分层管理&quot;&gt;&lt;/a&gt;1.1 TCP/IP分层管理&lt;/h4&gt;&lt;h3 id=&quot;分层的优势&quot;&gt;&lt;a href=&quot;#分层的优势&quot; class=&quot;headerlink&quot; title=&quot;分层的优势&quot;&gt;&lt;/a&gt;分层的优势&lt;/h3&gt;&lt;p&gt;  各层次接口调整好后，每个层次内部可以自由改动。&lt;/p&gt;
&lt;h3 id=&quot;分层&quot;&gt;&lt;a href=&quot;#分层&quot; class=&quot;headerlink&quot; title=&quot;分层&quot;&gt;&lt;/a&gt;分层&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;应用层&lt;br&gt;应用层决定向用户提供应用服务时通信的活动。&lt;strong&gt;HTTP属于该层。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;传输层&lt;br&gt;传输层提供&lt;strong&gt;处于网络连接中的&lt;/strong&gt;两台计算机的&lt;strong&gt;数据传输&lt;/strong&gt;，有两个性质不同的协议：TCP（Transmission control protocol）与UDP（User data protocol）。&lt;/li&gt;
&lt;li&gt;网络层&lt;br&gt;网络层规定了到达用户计算机并传输数据的传输路线。&lt;/li&gt;
&lt;li&gt;链路层&lt;br&gt;即硬件部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;1-2-TCP-IP数据传输流&quot;&gt;&lt;a href=&quot;#1-2-TCP-IP数据传输流&quot; class=&quot;headerlink&quot; title=&quot;1.2 TCP/IP数据传输流&quot;&gt;&lt;/a&gt;1.2 TCP/IP数据传输流&lt;/h4&gt;&lt;p&gt;  客户端&amp;lt;-&amp;gt;层&amp;lt;-&amp;gt;服务器&lt;br&gt;  发送端传输数据时，每经过一层必定被打上一个该层所属的首部信息，反之，接收端接收数据时，每经过一层必定会把对应的首部消去。这种方法称为&lt;strong&gt;封装&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="CS" scheme="http://example.com/categories/CS/"/>
    
    <category term="CN" scheme="http://example.com/categories/CS/CN/"/>
    
    <category term="InfoSec" scheme="http://example.com/categories/CS/CN/InfoSec/"/>
    
    
    <category term="HTTP" scheme="http://example.com/tags/HTTP/"/>
    
    <category term="websec" scheme="http://example.com/tags/websec/"/>
    
  </entry>
  
</feed>
